{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/src/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '../../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Package, Users, ShoppingBag, MailOpen } from 'lucide-react';\n\ninterface Order {\n  id: number;\n  orderNumber: string;\n  totalAmount: number;\n  orderProgress: 'PROCESSING' | 'INTRANSIT' | 'READY_FOR_PICKUP' | 'COMPLETED';\n  createdAt: string;\n}\n\ninterface Product {\n  id: number;\n  name: string;\n  inStock: number;\n}\n\ninterface Contact {\n  id: number;\n  name: string;\n  subject: string;\n  createdAt: string;\n}\n\ninterface Blog {\n  id: number;\n  title: string;\n  createdAt: string;\n}\n\ninterface RevenueData {\n  date: string;\n  amount: number;\n}\n\ninterface RevenueAccumulator {\n  [key: string]: number;\n}\n\nconst Dashboard = () => {\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [products, setProducts] = useState<Product[]>([]);\n  const [contacts, setContacts] = useState<Contact[]>([]);\n  const [blogs, setBlogs] = useState<Blog[]>([]);\n  const [revenueData, setRevenueData] = useState<RevenueData[]>([]);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const [ordersRes, productsRes, contactsRes, blogsRes] = await Promise.all([\n          fetch('/api/orders'),\n          fetch('/api/products'),\n          fetch('/api/contacts'),\n          fetch('/api/blogs')\n        ]);\n\n        const [ordersData, productsData, contactsData, blogsData] = await Promise.all([\n          ordersRes.json() as Promise<Order[]>,\n          productsRes.json() as Promise<Product[]>,\n          contactsRes.json() as Promise<Contact[]>,\n          blogsRes.json() as Promise<Blog[]>\n        ]);\n\n        setOrders(ordersData);\n        setProducts(productsData);\n        setContacts(contactsData);\n        setBlogs(blogsData);\n\n        // Process revenue data with proper typing\n        const revenueByDate = ordersData.reduce<RevenueAccumulator>((acc, order) => {\n          const date = new Date(order.createdAt).toLocaleDateString();\n          acc[date] = (acc[date] || 0) + order.totalAmount;\n          return acc;\n        }, {});\n\n        const chartData: RevenueData[] = Object.entries(revenueByDate).map(([date, amount]) => ({\n          date,\n          amount: Number(amount) // Ensure amount is a number\n        }));\n\n        setRevenueData(chartData);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    };\n\n    fetchDashboardData();\n    // Set up polling every 30 seconds for real-time updates\n    const interval = setInterval(fetchDashboardData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Calculate statistics\n  const totalRevenue = orders.reduce((sum, order) => sum + order.totalAmount, 0);\n  const pendingOrders = orders.filter(order => order.orderProgress === 'PROCESSING').length;\n  const lowStockProducts = products.filter(product => product.inStock < 10).length;\n  const recentContacts = contacts.length;\n\n  return (\n    <div className=\"p-6 space-y-6 bg-white rounded-md\">\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-4\">\n              <ShoppingBag className=\"h-10 w-10 text-blue-500\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Total Revenue</p>\n                <h3 className=\"text-2xl font-bold\">KES {totalRevenue.toLocaleString()}</h3>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-4\">\n              <Package className=\"h-10 w-10 text-orange-500\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Pending Orders</p>\n                <h3 className=\"text-2xl font-bold\">{pendingOrders}</h3>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-4\">\n              <Users className=\"h-10 w-10 text-green-500\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Low Stock Items</p>\n                <h3 className=\"text-2xl font-bold\">{lowStockProducts}</h3>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-4\">\n              <MailOpen className=\"h-10 w-10 text-purple-500\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">New Messages</p>\n                <h3 className=\"text-2xl font-bold\">{recentContacts}</h3>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Revenue Chart */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Revenue Overview</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#2563eb\" strokeWidth={2} />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Recent Activity */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Orders</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {orders.slice(0, 5).map((order) => (\n                <div key={order.id} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium\">Order #{order.orderNumber}</p>\n                    <p className=\"text-sm text-gray-500\">\n                      {new Date(order.createdAt).toLocaleDateString()}\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-medium\">KES {order.totalAmount.toLocaleString()}</p>\n                    <p className=\"text-sm text-gray-500\">{order.orderProgress}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Messages</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {contacts.slice(0, 5).map((contact) => (\n                <div key={contact.id} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium\">{contact.name}</p>\n                    <p className=\"text-sm text-gray-500\">{contact.subject}</p>\n                  </div>\n                  <p className=\"text-sm text-gray-500\">\n                    {new Date(contact.createdAt).toLocaleDateString()}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}