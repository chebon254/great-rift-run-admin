{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/src/app/Orders/Order-Detail/%5Bid%5D/OrderDetails.tsx"],"sourcesContent":["// src/app/Orders/Order-Detail/[id]/OrderDetails.tsx\n\"use client\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { OrderProgress, PaymentStatus } from \"@prisma/client\";\n\ninterface OrderDetail {\n  id: number;\n  orderNumber: string;\n  orderProgress: OrderProgress;\n  paymentStatus: PaymentStatus;\n  paymentMethod: string;\n  createdAt: Date;\n  updatedAt: Date;\n  totalAmount: number;\n  subtotal: number;\n  shippingCost: number;\n  address: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    city: string;\n    street: string;\n    house: string;\n    additionalInfo?: string;\n  };\n  items: {\n    id: number;\n    quantity: number;\n    price: number;\n    product: {\n      name: string;\n      imageURL1: string;\n    };\n  }[];\n}\n\nconst OrderDetails = ({ id }: { id: string }) => {\n  const [order, setOrder] = useState<OrderDetail | null>(null);\n\n  // Memoize fetchOrderDetails to avoid re-creating it on each render\n  const fetchOrderDetails = useCallback(async () => {\n    try {\n      const response = await fetch(`/api/orders/${id}`);\n      const data = await response.json();\n      setOrder(data);\n    } catch (error) {\n      console.error(\"Error fetching order details:\", error);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (id) {\n      fetchOrderDetails();\n    }\n  }, [id, fetchOrderDetails]); \n\n  const updateOrderStatus = async (status: OrderProgress) => {\n    try {\n      const response = await fetch(`/api/orders/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ status }),\n      });\n      if (response.ok) {\n        fetchOrderDetails();\n      }\n    } catch (error) {\n      console.error(\"Error updating order status:\", error);\n    }\n  };\n\n  if (!order) return <div>Loading...</div>;\n\n  return (\n    <>\n      <div className=\"relative z-10 rounded-[10px] bg-white shadow-1 mb-4 px-4 py-4 md:px-6 2xl:px-7 flex items-center justify-start flex-wrap\">\n        <ol className=\"flex items-center whitespace-nowrap\">\n          <li className=\"inline-flex items-center\">\n            <Link\n              className=\"flex items-center text-sm text-gray-500 hover:text-blue-600 focus:outline-none focus:text-blue-600\"\n              href=\"/Orders\"\n            >\n              Orders\n              <svg\n                className=\"shrink-0 mx-2 size-4 text-gray-400\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"m9 18 6-6-6-6\"></path>\n              </svg>\n            </Link>\n          </li>\n          <li className=\"inline-flex items-center text-sm font-semibold text-gray-800 truncate\">\n            Order Details\n          </li>\n        </ol>\n      </div>\n\n      <div className=\"w-full p-6 rounded-2xl bg-white\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"p-0\">\n            <h1 className=\"text-2xl font-bold mb-4\">Order Details</h1>\n            <p className=\"mb-2\">Order #{order.orderNumber}</p>\n            <p className=\"mb-6\">Status: {order.orderProgress}</p>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-base font-bold mr-4\">Change Order Status: </h3>\n            <select\n              value={order.orderProgress}\n              onChange={(e) =>\n                updateOrderStatus(e.target.value as OrderProgress)\n              }\n              className=\"py-3 px-7 rounded-sm bg-[#14AE5C] text-[#FFFFFF]\"\n            >\n              {Object.values(OrderProgress).map((status) => (\n                <option key={status} value={status}>\n                  {status}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n          {/* Order Info */}\n          <div className=\"border rounded-lg p-4\">\n            <h2 className=\"font-semibold mb-4\">Order Info</h2>\n            <p className=\"my-2\">\n              <strong>Order Date:</strong>{\" \"}\n              {new Date(order.createdAt).toLocaleDateString()}\n            </p>\n            <p className=\"my-2\">\n              <strong>Last Updated:</strong>{\" \"}\n              {new Date(order.updatedAt).toLocaleDateString()}\n            </p>\n            <p className=\"my-2\">\n              <strong>Status:</strong> {order.orderProgress}\n            </p>\n            <p className=\"my-2\">\n              <strong>Payment Status:</strong> {order.paymentStatus}\n            </p>\n            <p className=\"my-2\">\n              <strong>Payment Method:</strong> {order.paymentMethod}\n            </p>\n          </div>\n\n          {/* Customer Info */}\n          <div className=\"border rounded-lg p-4\">\n            <h2 className=\"font-semibold mb-4\">Customer</h2>\n            <p className=\"my-2\">\n              <strong>Name:</strong>{\" \"}\n              {`${order.address.firstName} ${order.address.lastName}`}\n            </p>\n            <p className=\"my-2\">\n              <strong>Email:</strong> {order.address.email}\n            </p>\n            <p className=\"my-2\">\n              <strong>Phone:</strong> {order.address.phone}\n            </p>\n          </div>\n\n          {/* Shipping Address */}\n          <div className=\"border rounded-lg p-4\">\n            <h2 className=\"font-semibold mb-2\">Shipping Address</h2>\n            <p className=\"my-2\">\n              <strong>City:</strong> {order.address.city}\n            </p>\n            <p className=\"my-2\">\n              <strong>Street:</strong> {order.address.street}\n            </p>\n            <p className=\"my-2\">\n              <strong>House:</strong> {order.address.house}\n            </p>\n            {order.address.additionalInfo && (\n              <p className=\"my-2\">\n                <strong>Additional Info:</strong> {order.address.additionalInfo}\n              </p>\n            )}\n          </div>\n        </div>\n\n        {/* Order Items */}\n        <div className=\"space-y-4 mb-6\">\n          {order.items.map((item) => (\n            <div\n              key={item.id}\n              className=\"flex items-center justify-between border rounded-lg p-4\"\n            >\n              <Image\n                src={item.product.imageURL1 || \"/product/product-02.webp\"}\n                alt={item.product.name}\n                width={80}\n                height={80}\n              />\n              <div className=\"flex-1 ml-4\">\n                <h4 className=\"font-semibold\">{item.product.name}</h4>\n                <p>Quantity: {item.quantity}</p>\n              </div>\n              <p className=\"font-semibold\">Ksh{item.price.toLocaleString()}</p>\n            </div>\n          ))}\n        </div>\n\n        {/* Order Summary */}\n        <div className=\"text-right\">\n          <p className=\"mb-1\">\n            <strong>Subtotal:</strong> Ksh{order.subtotal.toLocaleString()}\n          </p>\n          <p className=\"mb-1\">\n            <strong>Shipping Charge:</strong> Ksh\n            {order.shippingCost.toLocaleString()}\n          </p>\n          <p className=\"mb-1\">\n            <strong>Taxes:</strong> Ksh\n            {(\n              order.totalAmount -\n              order.subtotal -\n              order.shippingCost\n            ).toLocaleString()}\n          </p>\n          <h3 className=\"text-xl font-bold mt-4\">\n            Total: Ksh{order.totalAmount.toLocaleString()}\n          </h3>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OrderDetails;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}