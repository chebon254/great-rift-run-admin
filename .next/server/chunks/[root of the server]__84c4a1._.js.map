{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/src/app/api/products/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport async function DELETE(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  const { id } = await params;\n  const productId = Number(id);\n\n  if (isNaN(productId)) {\n    return NextResponse.json({ error: \"Invalid ID\" }, { status: 400 });\n  }\n\n  try {\n    const updatedProduct = await prisma.product.update({\n      where: { id: productId },\n      data: {\n        inStock: 0,\n        deletedAt: new Date()\n      }\n    });\n\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error(\"Failed to delete product:\", error);\n    return NextResponse.json(\n      { error: \"Failed to delete product\" },\n      { status: 500 }\n    );\n  } finally {\n    await prisma.$disconnect();\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,OACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,MAAM,YAAY,OAAO;IAEzB,IAAI,MAAM,YAAY;QACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IAClE;IAEA,IAAI;QACF,MAAM,iBAAiB,MAAM,OAAO,OAAO,CAAC,MAAM,CAAC;YACjD,OAAO;gBAAE,IAAI;YAAU;YACvB,MAAM;gBACJ,SAAS;gBACT,WAAW,IAAI;YACjB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,MAAM,OAAO,WAAW;IAC1B;AACF"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}