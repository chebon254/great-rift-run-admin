{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nconst prisma =\n  globalForPrisma.prisma ||\n  new PrismaClient({\n    log: ['query'],\n  });\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SACJ,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/src/app/api/orders/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport prisma from '../../../../lib/prisma';\nimport { OrderProgress } from '@prisma/client';\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const status = searchParams.get('status');\n\n  try {\n    const orders = await prisma.order.findMany({\n      where: status && status !== 'ALL' ? {\n        orderProgress: status as OrderProgress\n      } : undefined,\n      include: {\n        address: {\n          select: {\n            firstName: true,\n            lastName: true,\n          },\n        },\n      },\n      orderBy: {\n        createdAt: 'desc',\n      },\n    });\n\n    return NextResponse.json(orders);\n  } catch {\n    return NextResponse.json({ error: 'Failed to fetch orders' }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,SAAS,aAAa,GAAG,CAAC;IAEhC,IAAI;QACF,MAAM,SAAS,MAAM,+GAAA,CAAA,UAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;YACzC,OAAO,UAAU,WAAW,QAAQ;gBAClC,eAAe;YACjB,IAAI;YACJ,SAAS;gBACP,SAAS;oBACP,QAAQ;wBACN,WAAW;wBACX,UAAU;oBACZ;gBACF;YACF;YACA,SAAS;gBACP,WAAW;YACb;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAM;QACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}