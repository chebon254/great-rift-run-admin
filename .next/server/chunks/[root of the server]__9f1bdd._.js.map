{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nconst prisma =\n  globalForPrisma.prisma ||\n  new PrismaClient({\n    log: ['query'],\n  });\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SACJ,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/src/app/api/blogs/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport prisma from '../../../../../lib/prisma';\n\nexport async function GET(\n  req: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const blog = await prisma.blog.findUnique({\n      where: {\n        id: parseInt(params.id),\n      },\n    });\n\n    if (!blog) {\n      return NextResponse.json({ error: 'Blog not found' }, { status: 404 });\n    }\n\n    return NextResponse.json(blog);\n  } catch (error) {\n    return NextResponse.json({ error: 'Failed to fetch blog' }, { status: 500 });\n  }\n}\n\nexport async function DELETE(\n  req: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n\n    await prisma.blog.delete({\n      where: {\n        id: parseInt(params.id),\n      },\n    });\n\n    return NextResponse.json({ message: 'Blog deleted successfully' });\n  } catch (error) {\n    return NextResponse.json({ error: 'Failed to delete blog' }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IACpB,GAAY,EACZ,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,OAAO,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACxC,OAAO;gBACL,IAAI,SAAS,OAAO,EAAE;YACxB;QACF;QAEA,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF;AAEO,eAAe,OACpB,GAAY,EACZ,EAAE,MAAM,EAA8B;IAEtC,IAAI;QAEF,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACvB,OAAO;gBACL,IAAI,SAAS,OAAO,EAAE;YACxB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA4B;IAClE,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}