{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nconst prisma =\n  globalForPrisma.prisma ||\n  new PrismaClient({\n    log: ['query'],\n  });\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SACJ,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/kibet/Dev/great-rift-run-admin/src/app/api/blogs/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport prisma from \"../../../../lib/prisma\";\nimport slugify from \"slugify\";\n\nexport async function POST(req: Request) {\n  try {\n\n    const body = await req.json();\n    const { title, content, excerpt, thumbnail } = body;\n\n    const slug = slugify(title, { lower: true });\n\n    const blog = await prisma.blog.create({\n      data: {\n        title,\n        slug,\n        content,\n        excerpt,\n        thumbnail,\n      },\n    });\n\n    return NextResponse.json(blog);\n  } catch (error) {\n    console.error(\"[BLOGS_POST]\", error);\n    return new NextResponse(\"Internal error\", { status: 500 });\n  }\n}\n\nexport async function GET() {\n  try {\n    const blogs = await prisma.blog.findMany({\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return NextResponse.json(blogs);\n  } catch (error) {\n    console.error(\"[BLOGS_GET]\", error);\n    return new NextResponse(\"Internal error\", { status: 500 });\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QAEF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG;QAE/C,MAAM,OAAO,CAAA,GAAA,oIAAA,CAAA,UAAO,AAAD,EAAE,OAAO;YAAE,OAAO;QAAK;QAE1C,MAAM,OAAO,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACpC,MAAM;gBACJ;gBACA;gBACA;gBACA;gBACA;YACF;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,kBAAkB;YAAE,QAAQ;QAAI;IAC1D;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,QAAQ,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACvC,SAAS;gBACP,WAAW;YACb;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,kBAAkB;YAAE,QAAQ;QAAI;IAC1D;AACF"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}